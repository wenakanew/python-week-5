# Base class
class Vehicle:
    def move(self):
        raise NotImplementedError("Subclasses must implement this method")

# Subclass: Car
class Car(Vehicle):
    def move(self):
        print("🚗 Car is driving on the road.")

# Subclass: Plane
class Plane(Vehicle):
    def move(self):
        print("✈️ Plane is flying in the sky.")

# Subclass: Boat
class Boat(Vehicle):
    def move(self):
        print("🛥️ Boat is sailing on the water.")

# Subclass: Bike
class Bike(Vehicle):
    def move(self):
        print("🏍️ Bike is zooming on the highway.")

# Subclass: Train
class Train(Vehicle):
    def move(self):
        print("🚆 Train is gliding on the tracks.")

# Function demonstrating polymorphism
def travel(vehicle):
    vehicle.move()

# Create a list of various vehicles
vehicles = [Car(), Plane(), Boat(), Bike(), Train()]

# Test polymorphic behavior
for v in vehicles:
    travel(v)
